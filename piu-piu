#!/bin/bash
#--------------------------------------------------------------------+
#Color picker, usage: printf ${BLD}${CUR}${RED}${BBLU}"Hello!)"${DEF}|
#-------------------------+--------------------------------+---------+
#       Text color        |       Background color         |         |
#-----------+-------------+--------------+-----------------+         |
# Base color|Lighter shade| Base color   | Lighter shade   |         |
#-----------+-------------+--------------+-----------------+         |
BLK='\e[30m'; blk='\e[90m'; BBLK='\e[40m'; bblk='\e[100m' #| Black   |
RED='\e[31m'; red='\e[91m'; BRED='\e[41m'; bred='\e[101m' #| Red     |
GRN='\e[32m'; grn='\e[92m'; BGRN='\e[42m'; bgrn='\e[102m' #| Green   |
YLW='\e[33m'; ylw='\e[93m'; BYLW='\e[43m'; bylw='\e[103m' #| Yellow  |
BLU='\e[34m'; blu='\e[94m'; BBLU='\e[44m'; bblu='\e[104m' #| Blue    |
MGN='\e[35m'; mgn='\e[95m'; BMGN='\e[45m'; bmgn='\e[105m' #| Magenta |
CYN='\e[36m'; cyn='\e[96m'; BCYN='\e[46m'; bcyn='\e[106m' #| Cyan    |
WHT='\e[37m'; wht='\e[97m'; BWHT='\e[47m'; bwht='\e[107m' #| White   |
#----------------------------------------------------------+---------+
# Effects                                                            |
#--------------------------------------------------------------------+
DEF='\e[0m'   #Default color and effects                             |
BLD='\e[1m'   #Bold\brighter                                         |
DIM='\e[2m'   #Dim\darker                                            |
CUR='\e[3m'   #Italic font                                           |
UND='\e[4m'   #Underline                                             |
INV='\e[7m'   #Inverted                                              |
COF='\e[?25l' #Cursor Off                                            |
CON='\e[?25h' #Cursor On                                             |
#--------------------------------------------------------------------+
# Text positioning, usage: XY 10 10 "Hello World!"                   |
XY   () { printf "\e[${2};${1}H${3}";   } #                          |
#--------------------------------------------------------------------+
# Print line, usage: line - 10 | line -= 20 | line "Hello World!" 20 |
line () { printf %.s"${1}" $(seq ${2}); } #                          |
#--------------------------------------------------------------------+

#------------------------{ Start opt }------------------------{ description }--------------{ def. values }--------------
    tillboss=100									# frags needed to fight with boss			(100)
     bhealth=100									# boss' health								(100)
     enumber=0										# current enemy counter						(0)
     bonuses=("ammo" "life" "ammo" "gunup" "ammo")	# bonuses, more ammo, less life ang gunup
      goback=false									# need 4 boss movement
       enmax=10										# max number of akiens						(10)
       month=$(date +'%m')							# get current month
       frags=0										# frags counter								(0)
        life=3										# life counter								(3)
        ammo=100									# ammo counter								(100)
         rnd=10										# random seed 4 bonuses						(10)
         spd=0.0001									# game\read speed							(0.0001)
          DHC=${BLK}								# default hero color
          DSC=${RED}								# default symbol color
          DHS=★										# default symbol
          BY=$[$(tput lines) / 2]					# boss start Y
          BX=$[$(tput  cols) + 1]					# boss start X
          BC=0										# boss' sprite cutter
          LX=1										# grass X counter
           X=1										# hero X									(1)
           Y=1										# hero Y									(1)
           L=0										# sprites animation counter
           J=0										# boss' bullet animation counter
           K=0										# boss' fire rate counter
           S=0										# Sun animation counter
           G=0										# gun 										(0)(max 4)

[ -e piu.conf ] && . piu.conf						# load start conf from file
#------------------------{ Messages }-----------------------------------------------------------------------------------
        help=(                  '                   ^     '
		                  "                   ${RED}W${DEF}     "
		      "${BLD}Control with:${DEF}  < ${RED}A S D${DEF} > "
		                        '                   v     '
		      ''
		      "${BLD}Shoot\select with:${DEF} ${YLW}P ${BLD}${red}-=${GRN}>${DEF} ")

        lose=('                            '
  ${BLD}${red}'  ____    _    __  __ _____ '${DEF}
        ${red}' / ___|  / \  |  \/  | ____|'${DEF}
        ${red}'| | __  / _ \ | |\/| |  _|  '${DEF}
        ${RED}'| |_\ \/ ___ \| |  | | |___ '${DEF}
  ${DIM}${RED}' \____/_/   \_\_|__|_|_____|'${DEF}
  ${BLD}${red}'  / _ \ \   / / ____|  _ \  '${DEF}
        ${red}' | | | \ \ / /|  _| | |_) | '${DEF}
        ${RED}' | |_| |\ V / | |___|  _ <  '${DEF}
  ${DIM}${RED}'  \___/  \_/  |_____|_| \_| '${DEF})

         win=('                           '
  ${BLD}${grn}'__        ______ _    _    '${DEF}
        ${grn}'\ \      / /____| |  | |   '${DEF}
        ${grn}' \ \ /\ / /  _| | |  | |   '${DEF}
        ${GRN}'  \ V  V /| |___| |__| |__ '${DEF}
  ${DIM}${GRN}' __\_/\_/_|_____|____|____|'${DEF}
  ${BLD}${grn}'|  _ \ / _ \| \ | | ____| |'${DEF}
        ${grn}'| | | | | | |  \| |  _| | |'${DEF}
        ${GRN}'| |_| | |_| | |\  | |___|_|'${DEF}
  ${DIM}${GRN}'|____/ \___/|_| \_|_____(_)'${DEF})

#------------------------{ Sprites }-------------------------------------------------------------------------------------
case $month in	0[1-4]|12)	SKY=${DEF}${bwht}				# winter & early spring sky
							LND=${DEF}${BLD}${WHT}${BWHT};; # winter & early spring land

				0[5-8]   )	SKY=${DEF}${bcyn}				# late spring & summer sky
							LND=${DEF}${DIM}${GRN}${bgrn};; # late spring & summer land

				09|1[0-1])	SKY=${DEF}${BCYN}				# autumn sky
							LND=${DEF}${DIM}${YLW}${BGRN};; # autumn land
esac

      eraser=${SKY}'           '

         gun=(- = ≡ ≣ 𝄚)

       grass=(│ ' ' ║ ' ' ░ ' ' ▒ ' ' ▓ ' ' █) # grass types

       ammob=("${BLD}${red}-=${SKY}${GRN}>${SKY} "
              "${BLD}${red}-=${SKY}${GRN}>${SKY} "
              "${BLD}${red}-=${SKY}${GRN}>${SKY} ")

       lifep=("${RED}/V\ ${SKY} "
              "${RED}\ / ${SKY} "
              "${RED} V  ${SKY} ")

       shoot=("${RED} -${SKY}${BLD}${GRN}>${SKY}"
              "${BLD}${red}-=${SKY}${GRN}>${SKY}"
              "${red}=-${SKY}${BLD}${GRN}>${SKY}"
              "${RED}- ${SKY}${GRN}>${SKY}")

      bshoot=("${ylw}█▓▒░${SKY}"
              "${ylw}▓▒░▒${SKY}"
              "${ylw}▒░▒▓${SKY}"
              "${ylw}░▒▓█${SKY}"
              "${ylw}▒▓█▓${SKY}"
              "${ylw}▓█▓▒${SKY}")

#------------------------{ Cycle slow }----------------------------------------------------------------------------------
         big=(' O   O '
		      'O   O  '
              '   O   '
              '  O   O')

       small=('o  '
              '   '
              '  o'
              ' o ')

#------------------------{ Cycle fast }----------------------------------------------------------------------------------
        big2=(${RED}' O   O '${SKY}
		      ${RED}'O   O  '${SKY}
              ${RED}"   ${BLD}O   "${SKY}
              ${RED}'  O   O'${SKY})

        big3=(${BLU}'  O   O'${SKY}
              ${BLU}"   ${BLD}O   "${SKY}
		      ${BLU}'O   O  '${SKY}
              ${BLU}' O   O '${SKY})

      small2=(${YLW}'o  '${SKY}
              ${YLW}'   '${SKY}
              ${YLW}'  o'${SKY}
              ${YLW}" ${BLD}o "${SKY})

#------------------------{ Clouds }--------------------------------------------------------------------------------------
      cloud1=(1' ,-., '
              0'(    ) '
              1' `+-` ')

	case $month in	0[1-5]|12) CLR=${DIM}${CYN};; # winter & early spring
					0[6-8]   ) CLR=${DIM}${WHT};; # late spring & summer
					09|1[0-1]) CLR=${blk}      ;; # autumn
	esac

cloud1_color=(${SKY}"${SKY} ${CLR} ${CLR} ${CLR} ${CLR} ${SKY}"
              ${SKY}"${CLR} ${SKY} ${SKY} ${SKY} ${SKY} ${CLR} ${SKY}"
              ${SKY}"${SKY} ${CLR} ${CLR} ${CLR} ${CLR} ${SKY}")

     cloud12=( 1${CLR}',-., '${SKY}
              0${CLR}'(    ) '${SKY}
               1${CLR}'`+-` '${SKY})

      cloud2=(1' ,-._., '
              0'(      ) '
              1' `-...` ')

	case $month in	0[1-5]|12) CLR=${CYN};; # winter & early spring
					0[6-8]   ) CLR=${WHT};; # late spring & summer
					09|1[0-1]) CLR=${BLK};; # autumn
	esac

cloud2_color=("${SKY} ${CLR} ${CLR} ${CLR} ${CLR} ${CLR} ${CLR} ${SKY}"
              "${CLR} ${SKY} ${SKY} ${SKY} ${SKY} ${SKY} ${SKY} ${CLR} ${SKY}"
              "${SKY} ${CLR} ${CLR} ${CLR} ${CLR} ${CLR} ${CLR} ${SKY}")

     cloud22=( 1${CLR}',-._., '${SKY}
              0${CLR}'(      ) '${SKY}
               1${CLR}'`-...` '${SKY})

      cloud3=(1' ,-"`.-"`. '
              0'(         ) '
              1' `--.....` ')

	case $month in	0[1-5]|12) CLR=${BLD}${CYN};; # winter & early spring
					0[6-8]   ) CLR=${BLD}${WHT};; # late spring & summer
					09|1[0-1]) CLR=${DIM}${BLK};; # autumn
	esac

cloud3_color=("${SKY} ${CLR} ${CLR} ${CLR} ${CLR} ${CLR} ${CLR} ${CLR} ${CLR} ${CLR} ${SKY}"
              "${CLR} ${SKY} ${SKY} ${SKY} ${SKY} ${SKY} ${SKY} ${SKY} ${SKY} ${SKY} ${CLR} ${SKY}" 
              "${SKY} ${CLR} ${CLR} ${CLR} ${CLR} ${CLR} ${CLR} ${CLR} ${CLR} ${CLR} ${SKY}")

     cloud32=( 1${CLR}',`"`.-"`. '${SKY}
              0${CLR}'(         ) '${SKY}
               1${CLR}'`--.....` '${SKY})

#------------------------{ Trees }---------------------------------------------------------------------------------------
       tree1=(1' _ '
              0'/ \ '
              0'\|/ '
              1' | ')

	case $month in	0[1-5]|12) CLR=${DIM}${WHT};; # winter & early spring
					0[6-8]   ) CLR=${DIM}${GRN};; # late spring & summer
					09|1[0-1]) CLR=${DIM}${YLW};; # autumn
	esac

         CM1=${SKY}${DIM}

 tree1_color=("${CLR} ${CLR} ${SKY}"
              "${CLR} ${CLR} ${CLR} ${SKY}"
              "${CLR} ${CM1} ${CLR} ${SKY}"
              "${SKY} ${CM1} ${SKY}")

      tree12=( 1${CLR}'_  '${SKY}
              0${CLR}'/ \ '${SKY}
              0${CLR}'\\'${CM1}'|'${CLR}'/ '${SKY}
               1${CM1}'| '${SKY})

       tree2=(1' _._ '
              0'/   \ '
              0'\ | / '
              1' \║/\ '
              2'  ║_/ '
              2'  ║ ')

	case $month in	0[1-5]|12) CLR=${WHT};; # winter & early spring
					0[6-8]   ) CLR=${GRN};; # late spring & summer
					09|1[0-1]) CLR=${YLW};; # autumn
	esac

         CM1=${SKY}${CLR}

 tree2_color=("${CLR} ${CLR} ${CLR} ${CLR} ${SKY}"
              "${CLR} ${CLR} ${CLR} ${CLR} ${CLR} ${SKY}"
              "${CLR} ${CLR} ${blk} ${CM1} ${CLR} ${SKY}"
              "${SKY} ${CLR} ${blk} ${CM1} ${CLR} ${SKY}"
              "${SKY} ${SKY} ${blk} ${CM1} ${CLR} ${SKY}"
              "${SKY} ${SKY} ${blk} ${CM1} ${SKY}")

      tree22=( 1${CLR}'_._  '${SKY}
              0${CLR}'/   \ '${SKY}
              0${CLR}'\\'${blk}' | '${CM1}'/ '${SKY}
               1${CLR}'\\'${blk}'║'${CM1}'/\ '${SKY}
                2${blk}'║'${CLR}'_/ '${SKY}
                2${blk}'║ '${SKY})

       tree3=(3'   _._ '
              2'  /   \ '
              1' _\ | / '
              0'/  \║/__ '
              0'\_\/║/  \ '
              3'   \║|/_/ '
              4'    ║/ '
              4'    ║ '
              4'    ║ ')

	case $month in	0[1-5]|12) CLR=${cyn}      ;; # winter & early spring
					0[6-8]   ) CLR=${BLD}${GRN};; # late spring & summer
					09|1[0-1]) CLR=${DIM}${red};; # autumn
	esac

         CM1=${SKY}${BLK}

 tree3_color=("${SKY} ${SKY} ${SKY} ${CLR} ${CLR} ${CLR} ${SKY}"
              "${SKY} ${SKY} ${CLR} ${SKY} ${SKY} ${SKY} ${CLR} ${SKY}"
              "${SKY} ${CLR} ${CLR} ${SKY} ${CM1} ${SKY} ${CLR} ${SKY}"
              "${CLR} ${SKY} ${SKY} ${CLR} ${CM1} ${CLR} ${CLR} ${CLR} ${SKY}"
              "${CLR} ${CLR} ${CM1} ${CLR} ${CM1} ${CLR} ${SKY} ${SKY} ${CLR} ${SKY}"
              "${SKY} ${SKY} ${SKY} ${CM1} ${CM1} ${CLR} ${CM1} ${CLR} ${CLR} ${SKY}"
              "${SKY} ${SKY} ${SKY} ${SKY} ${CM1} ${CM1} ${SKY}"
              "${SKY} ${SKY} ${SKY} ${SKY} ${CM1} ${SKY}"
              "${SKY} ${SKY} ${SKY} ${SKY} ${CM1} ${SKY}")


      tree32=(   3${CLR}'_._ '${SKY}
                2${CLR}'/   \ '${SKY}
               1${CLR}'_\ '${CM1}'|'${CLR}' / '${SKY}
              0${CLR}'/  \\'${CM1}'║'${CLR}'/__ '${SKY}
              0${CLR}'\_'${CM1}'\\'${CLR}'/'${CM1}'║'${CLR}'/  \ '${SKY}
                 3${BLK}'\║'${CLR}'|'${CM1}'/'${CLR}'_/ '${SKY}
                  4${BLK}'║/ '${SKY}
                  4${BLK}'║ '${SKY}
                  4${BLK}'║ '${SKY})

#------------------------{ Aliens slow }---------------------------------------------------------------------------------
       alien=(1' ___ '
              0'(   ) '
              1' `¯´ ')

         CM1=${DIM}${BLK}; CM2=${DIM}${BLK}${UND}; CM3=${SKY}${BLK}; CM4=${SKY}${BLU}
         CM5=${BLD}${YLW}; CM6=${BLD}${RED}; CM7=${BLD}${BLU}; CM8=${SKY}${YLW}; CM9=${SKY}${RED}

 alien_color=("${SKY} ${CM1} ${CM2} ${CM3} ${SKY}"
              "${CM1} ${red} ${red} ${red} ${CM1} ${SKY}"
              "${SKY} ${CM1} ${CM1} ${CM1} ${SKY}")

        boss=(4'         '
              2'     ___   '
              1'   _/   \_  '
              0'  /       \  '
              0' (         ) '
              0'  `¯¯---¯¯´  '
              1'            ')

  boss_color=("${SKY}" #                              center point
              "${SKY} ${SKY} ${SKY} ${SKY} ${SKY} ${CM1} ${CM2} ${CM1} ${SKY}"
              "${SKY} ${SKY} ${SKY} ${CM1} ${CM1} ${YLW} ${CM5} ${CM8} ${CM1} ${CM1} ${SKY}"
              "${SKY} ${SKY} ${CM1} ${RED} ${RED} ${RED} ${CM6} ${CM9} ${RED} ${RED} ${CM1} ${SKY}"
              "${SKY} ${CM1} ${SKY} ${BLU} ${BLU} ${BLU} ${CM7} ${CM4} ${BLU} ${BLU} ${SKY} ${CM1} ${SKY}"
              "${SKY} ${CM1} ${CM1} ${CM1} ${CM1} ${CM1} ${CM1} ${CM1} ${CM1} ${CM1} ${CM1} ${SKY}")

#------------------------{ Animations }---------------------------------------------------------------------------------
        boom=(  3${red}'.-.'${SKY}
               2${red}'(   )'${SKY}
                3${red}'`-`'${SKY}

               2${RED}', - .'${SKY}
              1${RED}'(     )'${SKY}
               2${RED}'. _ .'${SKY}

          3${DIM}${RED}'`  "'${SKY}
       0${DIM}${RED}'(       )'${SKY}
         2${DIM}${RED}'_ _ .'${SKY}); boomN=${#boom[@]}; boomC=3

         Sun=(${SKY}${YLW}'       ___ |       '${SKY}
              ${SKY}${YLW}'---````    \       '${SKY}
              ${SKY}${YLW}'           _`.     '${SKY}
              ${BLD}${YLW}'        ../   `..__'${SKY}
              ${SKY}${YLW}'     ../        /  '${SKY}
              ${SKY}${YLW}'    /          /   '${SKY}
              ${BLD}${YLW}'              /    '${SKY}
              ${SKY}${YLW}'              /    '${SKY}
              ${SKY}${YLW}'             /     '${SKY}

              ${SKY}${YLW}'_...---``  |       '${SKY}
              ${BLD}${YLW}'        _.-\       '${SKY}
              ${SKY}${YLW}'   _.--`    `.     '${SKY}
              ${SKY}${YLW}' -`          ,`..__'${SKY}
              ${BLD}${YLW}'           ,`     |'${SKY}
              ${SKY}${YLW}'         ,`       |'${SKY}
              ${SKY}${YLW}'       _`        | '${SKY}
              ${BLD}${YLW}'                 | '${SKY}
              ${SKY}${YLW}'                 | '${SKY}

              ${BLD}${YLW}'     _...--|       '${SKY}
              ${SKY}${YLW}'..--`      \       '${SKY}
              ${BLD}${YLW}'         .. `.     '${SKY}
              ${SKY}${YLW}'     _.-`     `..__'${SKY}
              ${SKY}${YLW}'  ..`         .`   '${SKY}
              ${BLD}${YLW}'             /     '${SKY}
              ${SKY}${YLW}'            /      '${SKY}
              ${BLD}${YLW}'          .`       '${SKY}
              ${SKY}${YLW}'         `         '${SKY}); SunN=${#Sun[@]}; SunC=9

#------------------------{ Intro }--------------------------------------------------------------------------------------
           D=$DEF; C1=$BLU; C2=$RED; C3=$YLW; C4=$red; C5=$BLD$YLW; C6=$BLD$GRN; C7=$blu; C8=$BLD$RED

				#   ░   ░░░ ░░     ░  ░░      ░░  ░░ ░
				# ░   ░  ▒██████ ░▒██████ ▒██░  ▒██
				#   ░ ░░▒▓██ ▒▓██ ▓▓▓██▓ ▒▓██ ░▒▓██░░ ░
				#░ ░ ░░▒▓██ ▒▓██ ▒▒▒▓██ ░▒▓██░ ▒▓██░
				#      ▒▓██████░ ░▒▓██ ░▒▓██ ░▒▓██░░ ░ ░
				#  ░  ▒▓██▓▓▓▓  ░ ▒▓██░ ▒▓██░░▒▓██ ░
				#   ▒▓████▒▒▒░ ░ ▓██████ ▒▓██████░░ ░
				#░ ░▒▓▓▓▓ ░ ░░▒▓▓▓▓▓▓ ░ ▒▓▓▓▓▓░
				# ░ ▒▒ ░ ░ ░ ░▒▒▒▒▒▒ ░ ░░▒▒▒▒░  ░

         piu=(	"$C1   " "░  "    " ░░"    "░ ░" "░  " "   " "░  " "░░ " "   " "  ░" "░  " "░░ " "░$D  " "   "
				"$C1 ░ " "  ░" "  $C2▒" "$C3███" "███" " $C1░$C2▒" "$C3███" "███" " $C2▒$C3█" "█$C1░ " " $C2▒$C3█" "█$D  " "   " "   "
				"$C1   " "░ ░" "░$C2▒$C4▓" "$C3██ " "$C2▒$C4▓$C3█" "█ $C4▓" "▓▓$C3█" "█$C4▓ " "$C1▒$C4▓$C3█" "█ $C1░" "$C2▒$C4▓$C3█" "█$C1░░" " ░$D " "   "
				"$C1░ ░" " ░░" "$C2▒$C4▓$C3█" "█ $C2▒" "$C4▓$C3██" " $C2▒▒" "▒$C4▓$C3█" "█ $C2░" "▒$C4▓$C3█" "█$C1░ " "$C2▒$C4▓$C3█" "█$C1░$D " "   " "   "
				"$C1   " "   " "$C2▒$C4▓$C5█" "███" "██$C1░" " ░$C2▒" "$C4▓$C3██" " $C1░$C2▒" "$C4▓$C3██" " $C1░$C2▒" "$C4▓$C3██" "$C1░░ " "░ ░$D" "   "
				"$C1  ░" "  $C2▒" "$C4▓$C3██" "$C4▓▓▓" "▓  " "$C1░ $C2▒" "$C4▓$C3██" "$C1░ $C2▒" "$C4▓$C3██" "$C1░░$C2▒" "$C4▓$C3██" " $C1░$D " "   " "   "
				"$C2   " "▒$C4▓$C3█" "███" "$C2▒▒▒" "$C1░ ░" " $C4▓$C3█" "███" "██ " "$C1▒$C4▓$C3█" "███" "██$C1░" "░ ░$D" "   " "   "
				"$C1░ ░" "$C2▒$C4▓▓" "▓▓ " "$C1░ ░" "░$C2▒$C4▓" "▓▓▓" "▓▓ " "$C1░ $C2▒" "$C4▓▓▓" "▓▓$C1░$D" "   " "   " "   " "   "
				"$C1 ░ " "▒▒ " "░ ░" " ░ " "░▒▒" "▒▒▒" "▒ ░" " ░░" "▒▒▒" "▒░ " " ░ " "   " "   " "$D   "); piuN=${#piu[*]}; piuC=14

				#          ░░ ▒▒███░
				#     ░░░ ▒████ ▒▓███░
				# ░ ▒████▒▓▓▓▓ ░░▒▓▓███ ░░ ░
				#░ ▒▓▓▓▓ ▒████░▒▓███░░
				# ▒ ▒▒  ▒▓▓▓▓▒▓███░
				#    ░░░ ▒▒▒ ░░▒▒░

         arr=(	"   " "   " "   " "   " " $C7░░" " $C2▒▒" "$C6███" "$C7░$D  " ""    ""
				"   " "   " "  $C7░" "░░ " "$C2▒$C8██" "██ " "$C7▒$C3▓$C6█" "██$C7░$D" ""    ""
				"   " " $C7░ " "▒$C8██" "██$D$C2▒" "$C3▓▓▓" "▓ $C7░" "░$C7▒$C3▓" "▓$C6██" "█ $C7░" "░ ░$D"
				"   " "$C7░ $C2▒" "$C3▓▓▓" "▓ $C2▒" "$C8███" "█$D$C7░$C2▒" "$C3▓$C6██" "█$C7░░$D" "   " ""
				"   " " $C7▒ " "▒▒ " " $C2▒$C3▓" "▓▓▓" "$C7▒$C3▓$C6█" "██$C7░$D" "   " ""    ""
				"   " "   " " $C7░░" "░ ▒" "▒▒ " "░░▒" "▒░$D " "   " ""    ""); arrN=${#arr[*]}; arrC=10

#------------------------{ Functions }-----------------------------------------------------------------------------------
function sprites { # dynamic sprites

       bfire=("${bshoot[$J]} ")

       alien=(1' ___ '
              0"(${small[$L]}) "
		      1' `¯´ ')

         CM1=${DIM}${BLK}; CM2=${SKY}${BLK}
      alien2=( 1"${CM1}_${UND}_${CM2}_ "
              0"${CM1}(${red}${small[$L]}${CM1})${SKY} "
		       1${CM1}'`¯´ '${SKY})

        boss=(4'         '
              2'     ___   '
              1"   _/${small[$[3 - $L]]}\_  "
              0"  /${big[$L]}\  "
              0" ( ${big[$L]} ) "
              0'  `¯¯---¯¯´  '
              1'            ')

       boss2=(4${SKY}'     '
                2"   ${CM1}_${UND}_${CM2}_${SKY}   "
               1"  ${CM1}_/${small2[$[3 - $L]]}${CM1}\_${SKY}  "
              0"  ${CM1}/${big2[$L]}"${CM1}'\\'"${SKY}  "
              0" ${CM1}( ${big3[$L]} ${CM1})${SKY} "
              0"  ${CM1}"'`¯¯---¯¯´  '
               1'           ')

         CM4=${DIM}$HC; CM5=${SKY}${HC}; CM6=${BLD}${HC}; CM7=${SKY}${SC}${HS}${HC}${BLD}
         CM8=${DIM}${UND}; CM9=${SKY}${HC}${BLD}

		hero=(${SKY}'    '
              ${CM5}' __      '${SKY}
              ${CM4}" |${CM7}〵${CM5}____  "${SKY}
              ${CM4}"  \_| ${CM6}/${CM8} °${CM9})${blk}-${SKY} "
              ${CM4}"    |${BLD}/     "${SKY}
              ${SKY}'       ')

	case ${G} in

	0) gunup=("${BLK}||${blk}--${SKY} "
              "${BLK}||${SKY} "
              "${BLK}||${DWHT}--${SKY} ");;

	1) gunup=("${BLK}||${blk}--${SKY} "
              "${BLK}||${blk}--${SKY} "
              "${BLK}||${blk}--${SKY} ");;

	2) gunup=("${BLK}||${blk}==${SKY} "
              "${BLK}||${SKY} "
              "${BLK}||${blk}==${SKY} ");;

	*) gunup=("${BLK}||${blk}==${SKY} "
              "${BLK}||${blk}--${SKY} "
              "${BLK}||${blk}==${SKY} ");; esac
}

function get_dimensions {
    size=($(stty size))
    endx=${size[1]}
    endy=${size[0]}
bullendx=$[$endx - 4 ]
heroendx=$[$endx - 12]
heroendy=$[$endy - 7 ]
enmyendy=$[$endy - 7 ]
bossendx=$[$endx - 11]
bossendy=$[$endy - 6 ]
bosshbar=$[$endx - 10]
tre1endy=$[$endy - 6 ]
tre2endy=$[$endy - 8 ]
tre3endy=$[$endy - 11]
lineendy=$[$endy - 2 ]
Sunsendx=$[$endx - 19]
}

function bye () {
	stty echo
	printf "${CON}${DEF}"
	clear; ls --color=auto
	exit $1
}

function default { HC=${DHC}; SC=${DSC}; HS=${DHS}; 	}

function remove_obj () { unset OBJ[$1]; OBJ=("${OBJ[@]}"); ((NO--)); }

function erase_obj  () { remove_obj $1; for (( k=0; k<$er; k++ )); do XY ${OX} $[$OY + $k] "${eraser}"; done; }

function remove_piu () { XY ${PX} ${PY} "${SKY}    "; unset PIU[$1]; PIU=("${PIU[@]}"); ((NP--)); }

function mess () { XY 1 1 ${DEF}; clear

	function print {
		x=$[$endx / 2 - ${#sprite} / 2]
		for (( i=0; i<${#sprite[*]}; i++ )); do XY ${x} $[$endy / 2 - 5 + $i] "${sprite[$i]}"; done
	}

	case $1 in
		"win" )	sprite=("${win[@]}") ; print; XY 0 ${endy}; sleep 3; bye 0;;
		"lose")	sprite=("${lose[@]}"); print; XY 0 ${endy}; sleep 3; bye 1;;
		"help")	sprite=("${help[@]}"); print;;
	esac
}

function left () { N=$1; C=$2

		# move
		[ $OX -ge $end ] && {

			((OX-=3)); [ $cuter -ne $C ] && ((cuter++))

			for ((j=0; j<$N; j+=$C)); do

				line=("${sprite[@]:$j:$cuter}"); YY=$[$OY+$j/$C]; spr=
				for part in "${line[@]}"; do spr+="${part}"; done; XY $OX $YY "${spr}"

			done; OBJ[$i]="$OX $OY $cuter $end $type $pause"
		} || { remove_obj $i; ((Q++)); OBJ+=("${scenario[$Q]}"); }
}

function right () { N=$1; C=$2

		# move
		[ $OX -le $end ] && {

			[ $cuter -ne $C ] && ((cuter++)) || ((OX+=3))

			for ((j=0; j<$N; j+=$C)); do

				line=("${sprite[@]:$j:$C}"); YY=$[$OY+$j/$C]; spr=
				for ((k=$[$C-$cuter]; k<$C; k++)); do spr+="${line[k]}"; done; XY $OX $YY "${spr}"

			done; OBJ[$i]="$OX $OY $cuter $end $type $pause"
		} || { remove_obj $i; ((Q++)); OBJ+=("${scenario[$Q]}"); }
}

function intro {

	get_dimensions; Q=0
	# Scenario 4 intro
    scenario=(	"$[$endx+1]    5 0     $[endx/2-34] piu"
				"$[$endx+1]    5 0     $[endx/2+2]  piu"
				"-2           14 0     $[endx/2-16] arr"
				"0             0 0     0            end"); OBJ=("${scenario[$Q]}")

	while true; do sleep 0.005; NO=${#OBJ[@]}; for (( i=0; i<$NO; i++ )); do
		OI=(${OBJ[$i]}); OX=${OI[0]}; OY=${OI[1]}; cuter=${OI[2]}; end=${OI[3]}; type=${OI[4]}

		case $type in
			#----------+---------------------+-------+-----+-----+-------+
			# OBJ type |        sprite       | func. |items|width|comment|
			#----------+---------------------+-------+-----+-----+-------+
			"arr" )		sprite=("${arr[@]}") ; right  $arrN $arrC;; #
			"piu" )		sprite=("${piu[@]}") ; left   $piuN $piuC;; #
			"end" )		                      return             ;; #

	esac; done; done
}

function configure {

  hero_color=(${BLK} ${RED} ${GRN} ${YLW} ${BLU} ${MGN} ${CYN} ${WHT}); HCN=${#hero_color[*]}; HCI=0;
  star_color=(${BLK} ${RED} ${GRN} ${YLW} ${BLU} ${MGN} ${CYN} ${WHT}); SCN=${#star_color[*]}; SCI=0;
   hero_star=(★ ☭ ✚ ✙ ✠ ✡ ✦ ✧ ✩ ✪ ☘ ☠ ☢ ☣ ☯ ❃ ❂ ❁ ✿ ❀ ✣ ♣ ♠ ♥ ♦ ❤ ● ☻ ♀ ♂); HSI=0; HSN=${#hero_star[*]}
        menu=( 'hero' 'star' 'symbol' 'apply' 'back' )                ; menuN=${#menu[*]};     menuI=$[$menuN-1]
        selL='>'; selR='<'; selN=' '

	function   back   { menu=( 'start' 'conf' 'exit' ); menuI=0; menuN=${#menu[*]}; }

	function deselect {
		selectedHCL=${selN}; selectedHCR=${selN}
		selectedSCL=${selN}; selectedSCR=${selN}
		selectedHSL=${selN}; selectedHSR=${selN}
		selectedAP=${DEF}  ; selectedBK=${DEF}; }

	while true; do get_dimensions

		hero=(${SKY}$HC'__        '${SKY}
              ${DIM}$HC"|${SKY}${SC}${HS}${HC}${BLD}〵${SKY}${HC}____  "${SKY}
              ${DIM}$HC" \_| ${BLD}${HC}/${DIM}${UND} °${SKY}${HC}${BLD})${blk}-${SKY}"
              ${DIM}$HC"   |${BLD}/     "${SKY}
                    $HC'          '${SKY})

		#-{ Get keys }-------------------------------------------------------------------------------------------------------
		read -t${spd} -n1 input 2> /dev/null; input=${input:0:1}; case $input in

			's'|'S') ((menuI++)); [ $menuI -gt $[$menuN-1] ] && menuI=$[$menuN-1];;
			'w'|'W') ((menuI--)); [ $menuI -lt 0           ] && menuI=0;;
			'd'|'D') case ${menu[$menuI]}	in	'hero'  ) ((HCI++)); [ $HCI -gt $[$HCN-1] ] && HCI=$[$HCN-1];;
												'star'  ) ((SCI++)); [ $SCI -gt $[$SCN-1] ] && SCI=$[$SCN-1];;
												'symbol') ((HSI++)); [ $HSI -gt $[$HSN-1] ] && HSI=$[$HSN-1];; esac;;

			'a'|'A')  case ${menu[$menuI]}	in	'hero'  ) ((HCI--)); [ $HCI -lt 0 ] && HCI=0;;
												'star'  ) ((SCI--)); [ $SCI -lt 0 ] && SCI=0;;
												'symbol') ((HSI--)); [ $HSI -lt 0 ] && HSI=0;; esac;;

			'p'|'P') case ${menu[$menuI]}	in	'hero'  ) HC=${hero_color[$HCI]};;
												'star'  ) SC=${star_color[$SCI]};;
												'symbol') HS=${hero_star[$HSI]} ;;
												'apply' )          back; clear; return;;
												'back'  ) default; back; clear; return;; esac;;
		esac

		#----------------------------------{ Print hero }----------------------------------
		for (( i=0; i<${#hero[@]}; i++ )); do XY $[$endx/2-4] $[5+$i] "${SKY} ${hero[$i]} "; done

		#----------------------------------{ Print controls }-------------------------------------------------------------
		for ((i=0; i<${HCN}; i++ )); do [ $i -eq $HCI ] && selectedHC=${BLD} || selectedHC=${DEF}
										XY $[$endx/2 - 4 + $i*3] $[$endy/2]   "$selectedHC${hero_color[$i]}██${DEF}"; done
		for ((i=0; i<${SCN}; i++ )); do [ $i -eq $SCI ] && selectedSC=${BLD} || selectedSC=${DEF}; SL=; SR=
										XY $[$endx/2 - 4 + $i*3] $[$endy/2+2] "$selectedSC${star_color[$i]}██${DEF}"; done
		for ((i=0; i<$[${HSN}/2]; i++ )); do [ $i -eq $HSI ] && selectedHS=${BLD}${RED} || selectedHS=${DEF}; SL=; SR=
										XY $[$endx/2 - 15 + $i*3] $[$endy/2+4] "$selectedHS${hero_star[$i]} ${DEF}" ; done
		for ((i=$[${HSN}/2]; i<${HSN}; i++ )); do [ $i -eq $HSI ] && selectedHS=${BLD}${RED} || selectedHS=${DEF}; SL=; SR=
										XY $[$endx/2 - 60 + $i*3] $[$endy/2+5] "$selectedHS${hero_star[$i]} ${DEF}" ; done

		case ${menu[$menuI]} in 'apply' )	deselect; selectedAP=${BLD}${RED};;
								'back'  )	deselect; selectedBK=${BLD}${RED};;
								'hero'  )	deselect; selectedHCL=${selL}; selectedHCR=${selR};;
								'star'  )	deselect; selectedSCL=${selL}; selectedSCR=${selR};;
								'symbol')	deselect; selectedHSL=${selL}; selectedHSR=${selR};;
								*       )	deselect;;esac

		XY $[$endx/2 - 18] $[$endy/2]   "${selectedHCL} Hero color: "  ; XY $[$endx/2 + 20] $[$endy/2]   "${selectedHCR}"
		XY $[$endx/2 - 20] $[$endy/2+2] "${selectedSCL} Symbol color: "; XY $[$endx/2 + 20] $[$endy/2+2] "${selectedSCR}"
		XY $[$endx/2 - 30] $[$endy/2+4] "${selectedHSL} Hero symbol: " ; XY $[$endx/2 + 30] $[$endy/2+4] "${selectedHSR}"

		XY $[$endx/2 - 2] $[$endy/2+7] "${selectedAP}apply${DEF}"
		XY $[$endx/2 - 2] $[$endy/2+9] "${selectedBK}back${DEF}"

	done

}

function main_menu {

	intro
	menu=( 'start' 'conf' 'exit' ); menuI=0; menuN=${#menu[*]}
	while true; do get_dimensions

		#-{ Get keys }-------------------------------------------------------------------------------------------------------
		read -t0.005 -n1 input 2> /dev/null; input=${input:0:1}; case $input in

			's'|'S') ((menuI++)); [ $menuI -gt $[$menuN-1] ] && menuI=$[$menuN-1];;
			'w'|'W') ((menuI--)); [ $menuI -lt 0      ] && menuI=0;;
			'd'|'D') menuI=$[$menuN-1];;
			'a'|'A') menuI=0;;
			'p'|'P') case ${menu[$menuI]} 	in	'start') return;;
												'conf' ) clear ;  configure && intro;;
												'exit' ) bye   ;; esac;;
		esac

		for ((i=0; i<$menuN; i++)); do

			[ $i -eq $menuI ] && selected=${BLD}${RED} || selected=${DEF}
			XY $[$endx / 2 - ${#menu[$i]} / 2] $[$endy - 6 + $i] " $selected${menu[$i]}${DEF} "

		done
	done
}

function mover () { er=$2; width=$3

	# move
	[ ${1} = 0 ] && { ((OX--)); ((cuter++)); OBJ[$i]="$OX $OY $cuter $type"; }

	# fly away
	case ${type} in

		'alien'|'tree'[1-3]|'cloud'[1-3]) [ $OX -lt -$width ] && { remove_obj ${i}; case ${type} in "alien") ((enumber--));; esac; return; };;
									*   ) [ $OX -lt  1      ] && { erase_obj  ${i}; case ${type} in "alien") ((enumber--));; esac; return; };;
	esac

	for (( p=0; p<${er}; p++ )); do

		# print
		case ${type} in

			# some magic 4 composite(slow\fast) sprites
			'alien'|'tree'[1-3]|'cloud'[1-3]) color=(${sprite_color[$p]}); YY=$[$OY+${p}]; stp=${sprite[$p]:0:1}; spr=${sprite[$p]:1}

				[ $OX -gt 1 ] && { [ $cuter -lt $width ] && { for (( k=0; k<${cuter}; k++ )); do [ $k -ge $stp ]  \
																&& { XY $[$k+$OX] $YY "${color[$k]}${spr:$k:1}"; } \
																|| { :; }; done; } \
														 || { stp=${sprite_fast[$p]:0:1}; spr=${sprite_fast[$p]:1}; XY $[${OX} + $stp] $[$OY + $p] "${spr}"; }; } \
                              || { for (( k=1; k<${width}; k++ )); do x=$[$k-$OX]; XY $k $YY "${color[$x]}${spr:$x}"; done; };;

			# simple command 4 fast only sprites
			*) XY ${OX} $[$OY + $p] "${sprite[$p]}";;

		esac

		# collisions
		case ${type} in
			"gunup" )	case "$[$OY + $p] $OX" in "$HY $HX") [ ${G} -lt 4 ] && ((G++)); erase_obj ${i}; break;; esac;;
			"life"  )	case "$[$OY + $p] $OX" in "$HY $HX") ((life++))   ; erase_obj ${i}; break;; esac;;
			"ammo"  )	case "$[$OY + $p] $OX" in "$HY $HX") ((ammo+=100)); erase_obj ${i}; break;; esac;;
			"bfire" )	case "$OY $OX"         in "$HY $HX") ((life--))   ; erase_obj ${i}; break;; esac;;
			"alien" )	for (( t=0; t<${NP}; t++ )); do case "$[$OY + 1] $[$OX + $p]" in # hit by bullet

							"${PIU[$t]}")	[ $[RANDOM % $rnd] -eq 0 ] && OBJ+=("$OX $OY 0 ${bonuses[$[RANDOM % ${#bonuses[@]}]]}") # get bonus
											((frags++));  ((enumber--)); remove_obj ${i}; remove_piu ${t}; OBJ+=("${OX} ${OY} 0 boom"); break;;
						esac; done

						# hit by plane
						case "$[$OY + 1] $[$OX + $p]" in
							"$HY $HX") ((life--)); ((frags++)); ((enumber--)); remove_obj ${i}; OBJ+=("${OX} ${OY} 0 boom"); break;;
						esac;;
		esac

	done
}

trap bye INT; stty -echo; printf "${COF}"; get_dimensions; default
clear; mess "help"; sleep 2; clear; main_menu; clear

#-{ Generate grass }-----------------------------------------------------------------------------------------------------
for ((i=0; i<$endx; i++)); do land+=${grass[$[RANDOM % ${#grass[*]}]]}; done; land+=$land; LN=${#land}

#-{ Fill screen }--------------------------------------------------------------------------------------------------------
for ((i=0;         i<$lineendy; i++)); do line ${SKY}' ' $endx; done
for ((i=$lineendy; i<$endy;     i++)); do line ${LND}' ' $endx; done

#================================================{ Main game loop }======================================================
while true; do

	get_dimensions; sprites

	#-{ Get keys }-------------------------------------------------------------------------------------------------------
	read -t${spd} -n1 input 2> /dev/null; input=${input:0:1}; case $input in

		'w'|'W') ((Y--)); [ $Y -lt 1         ] && Y=1;;
		'a'|'A') ((X--)); [ $X -lt 1         ] && X=1;;
		's'|'S') ((Y++)); [ $Y -gt $heroendy ] && Y=$heroendy;;
		'd'|'D') ((X++)); [ $X -gt $heroendx ] && X=$heroendx;;
		'p'|'P') [ $ammo -gt 0 ] && \
				 case ${G} in 0) PIU+=("$HY $HX"); ((ammo--));;
                	          1) PIU+=("$[$HY+1] $HX" "$[$HY-1] $HX"); ((ammo-=2));;
                	          2) PIU+=("$[$HY+1] $HX" "$[$HY-1] $HX" "$HY $[$HX+1]"); ((ammo-=3));;
                              3) PIU+=("$[$HY+1] $[$HX+1]" "$[$HY-1] $[$HX+1]" "$[$HY+2] $HX" "$[$HY-2] $HX"); ((ammo-=4));;
                              4) PIU+=("$[$HY+1] $[$HX+1]" "$[$HY-1] $[$HX+1]" "$[$HY+2] $HX" "$[$HY-2] $HX" "$HY $[$HX+2]"); ((ammo-=5));; esac;;
	esac

	# Hero collide coordinates
	HX=$(($X + 9)); HY=$(($Y + 3))

	# Check win\lose
	[ $bhealth -le 0 ] && mess win
	[ $life    -le 0 ] && mess lose

	#-{ Timings }--------------------------------------------------------------------------------------------------------
	((K++)); [ $K -gt 20 ] && K=0   # boss' fire rate
	((L++)); [ $L -gt 3  ] && L=0   # sprites animation
	((J++)); [ $J -gt 5  ] && J=0   # boss' bullet animation
	((Q++)); [ $Q -gt 6  ] && Q=0   # tree1\cloud1(small)  speed
	((W++)); [ $W -gt 4  ] && W=0   # tree2\cloud2(medium) speed
	((E++)); [ $E -gt 2  ] && E=0   # tree3\cloud3(large)  speed
	[ ${E} = 0 ] && { ((S+=${SunC}));  [ $S -gt ${SunN}  ] && S=0; }   # Sun animation

	#-{ Print Sun }------------------------------------------------------------------------------------------------------
	SY=1; for part in "${Sun[@]:$S:$SunC}"; do XY ${Sunsendx} ${SY} " ${part}"; ((SY++)); done

	#-{ Move\check\print hero bullets }----------------------------------------------------------------------------------
	NP=${#PIU[@]}; for (( t=0; t<${NP}; t++ )); do PI=(${PIU[$t]}); PY=${PI[0]}; PX=${PI[1]}

		# Move
		((PX++))

		# Fly away
		[ $PX -ge $bullendx ] && { remove_piu ${t}; continue; } || { PIU[$t]="$PY $PX"; }

		# print
		XY ${PX} ${PY} " ${shoot[$L]}"

		# Hit boss
		[ $frags -ge $tillboss ] && for (( p=2; p<5; p++ )); do case "$PY $PX" in

			"$[$BY + $p] $BX"|"$[$BY + $p] $[$BX + 1]") ((bhealth--)); remove_piu ${t};;

		esac; done

	done

	#-{ Move\check\print all flying to hero objects }--------------------------------------------------------------------
	NO=${#OBJ[@]}; for (( i=0; i<$NO; i++ )); do OI=(${OBJ[$i]}); OX=${OI[0]}; OY=${OI[1]}; cuter=${OI[2]}; type=${OI[3]}; case $type in

       #------------------------------------------------------------------------------------------------------------------------------------------+
       #                                      Composite sprites(fast\slow)                                                                        |
       #----------+------------------------+------------------------------------+------------------------------+------+-----+-----+-----+---------+
       # OBJ type | slow sprite            |   slow sprite's color table        |     fast sprite              |func. |timer|lines|width| comment |
       #----------+------------------------+------------------------------------+------------------------------+------+-----+-----+-----+---------+   
		"tree1" )	sprite=("${tree1[@]}") ; sprite_color=("${tree1_color[@]}") ; sprite_fast=("${tree12[@]}") ; mover   $Q    4     4  ;; #
		"tree2" )	sprite=("${tree2[@]}") ; sprite_color=("${tree2_color[@]}") ; sprite_fast=("${tree22[@]}") ; mover   $W    6     6  ;; # Trees
		"tree3" )	sprite=("${tree3[@]}") ; sprite_color=("${tree3_color[@]}") ; sprite_fast=("${tree32[@]}") ; mover   $E    9     10 ;; #

		"cloud1")	sprite=("${cloud1[@]}"); sprite_color=("${cloud1_color[@]}"); sprite_fast=("${cloud12[@]}"); mover   $Q    3     7  ;; #
		"cloud2")	sprite=("${cloud2[@]}"); sprite_color=("${cloud2_color[@]}"); sprite_fast=("${cloud22[@]}"); mover   $W    3     9  ;; # Clouds
		"cloud3")	sprite=("${cloud3[@]}"); sprite_color=("${cloud3_color[@]}"); sprite_fast=("${cloud32[@]}"); mover   $E    3     12 ;; #

		"alien" )	sprite=("${alien[@]}") ; sprite_color=("${alien_color[@]}") ; sprite_fast=("${alien2[@]}") ; mover    0    3     5  ;; # Aliens
       #---------------------------------------------------------------------------------+
       #               Fast only sprites                                                 |
       #----------+------------------------+------+-----+-----+-----+--------------------+
       # OBJ type |         sprite         |func. |timer|lines|width|      comment       |
       #----------+------------------------+------+-----+-----+-----+--------------------+
		"bfire" )	sprite=("${bfire[@]}") ; mover   0     6     4  ;; # Boss' plasma shot

		"ammo"  )	sprite=("${ammob[@]}") ; mover   0     3     4  ;; # Ammo bonus
		"life"  )	sprite=("${lifep[@]}") ; mover   0     3     4  ;; # Life bonus
		"gunup" )	sprite=("${gunup[@]}") ; mover   0     3     4  ;; # Gun powerup bonus

        # Enemy explosions, not moving, print in place
		"boom"  )	er=${boomC}
					for part in "${boom[@]:$B:$boomC}"; do stp=${part:0:1}; spr=${part:1}; XY $[${OX} + $stp] ${OY} "${spr}"; ((OY++)); done
					[ ${E} = 0 ] && { ((B+=${boomC})); [ $B -gt ${boomN} ] && { B=0; erase_obj ${i}; }; }
					;;
	esac; done

	#-{ BOSS }-----------------------------------------------------------------------------------------------------------
	[ $frags -ge $tillboss ] && {
		# Health bar
		bar=; hp=$[$bosshbar * $bhealth / 100]; hm=$[$endx - 10]
		for (( i=0  ; i<${hp}; i++ )); do bar="█${bar}"; done
		for (( i=$hp; i<${hm}; i++ )); do bar="${bar} "; done
		XY 1 $[$endy - 1] "${LND} ${BLD}${RED}BOSS: ${LND}${BLD}|${BLD}${RED}${bar}${LND}${BLD}|${LND}"

		YY=$[$Y-1]

		# Boss move
		[ $BY -lt $YY                                  ] && ((BY++))
		[ $BY -gt $YY                                  ] && ((BY--))
		[ $BX -gt $[$endx / 2] -a "$goback" == "false" ] && ((BX--)) || goback=true
		[ $BX -lt $bossendx    -a "$goback" == "true"  ] && ((BX++)) || goback=false

		((BC++))
		# Boss print
		for (( i=0; i<7; i++ )); do

			stp=${boss[$i]:0:1}; spr=${boss[$i]:1}; color=(${boss_color[$i]})
			[ $BC -lt 13 ] \
				&& { for (( k=0; k<$BC; k++ )); do [ $k -ge $stp ] \
						&& { XY $[$k+$BX] $[$BY + $i] "${color[$k]}${spr:$k:1}"; } \
						|| { :; }; done; } \
				|| { stp=${boss2[$i]:0:1}; spr=${boss2[$i]:1}; XY $[${BX} + $stp] $[$BY + $i] "${spr}"; }

		done

		# Boss fire
		[ $BY -eq $YY -a $K -eq 0 ] && OBJ+=("$[$BX - 4] $[$BY + 4] 0 bfire")

		# Collide with plane
		for (( p=2; p<5; p++ )); do case "$HY $HX" in

			"$[$BY + $p] $BX"|"$[$BY + $p] $[$BX + 1]") ((bhealth-=10)); ((life--));;

		esac; done

		# Add enemy
		[ $enumber -lt $enmax -a $J -eq 0 ] && { ((enumber++)); OBJ+=("$[$BX + 2] $[$BY + 3] 0 alien"); }
	} || {
		[ $enumber -lt $enmax -a $J -eq 0 ] && { ((enumber++)); OBJ+=("$[$endx + 1] $[RANDOM % $enmyendy + 3] 0 alien"); }
	}

    #-{ Add cloud }------------------------------------------------------------------------------------------------------
    [ $[RANDOM % 100] = 0 ] && OBJ+=("$[$endx + 1] $[RANDOM % 10 + 2] 0 cloud$[RANDOM % 3 + 1]")

    #-{ Add tree }-------------------------------------------------------------------------------------------------------
    [ $[RANDOM % 20] = 0 ] && { treetype=$[RANDOM % 3 + 1]; case ${treetype} in
        1) OBJ+=("$[$endx + 1] ${tre1endy} 0 tree1");;
        2) OBJ+=("$[$endx + 1] ${tre2endy} 0 tree2");;
        3) OBJ+=("$[$endx + 1] ${tre3endy} 0 tree3");;
    esac; }

	#-{ Print hero }-----------------------------------------------------------------------------------------------------
	for (( i=0; i<${#hero[@]}; i++ )); do XY ${X} $[$Y + $i] "${hero[$i]}"; done

	#-{ Print moving land }----------------------------------------------------------------------------------------------
	XY 1 $lineendy "${LND}${land:$[1-$LX]:$endx}"; [ $LX -lt  -$[$LN/2]  ] && LX=-1 || ((LX--))

	#-{ Print game status }----------------------------------------------------------------------------------------------
	XY 0 0 "${SKY}${BLK}killed aliens: ${SKY}${RED}${frags}${SKY}  ${BLK}Life: ${SKY}${RED}${life}${SKY}  ${BLK}Ammo: ${SKY}${RED}${ammo}${SKY} "

done
